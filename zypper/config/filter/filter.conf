#
# zypper.log
#


filter {

  # empty
  if ([message] == "") { drop {} }

  if ([type] == "zypper") {
    # zypper
    grok {
      # 2017-11-08 18:57:23 <1> x220.kkaempf(29653) [zypper] main.cc(main):74 ===== Hi, me zypper 1.13.37
      # 2017-11-08 18:57:23 <1> x220.kkaempf(29653) [zypper] main.cc(main):75 ===== 'zypper' 'ref' =====
      # 2017-11-08 18:57:23 <1> x220.kkaempf(29653) [zconfig] ZConfig.cc(_autodetectSystemArchitecture):73 Uname architecture is 'x86_64'
      # 2017-11-08 18:57:23 <1> x220.kkaempf(29653) [zconfig] ZConfig.cc(_autodetectTextLocale):202 Found LANG=en_US.UTF-8
      # 2017-11-08 18:57:23 <1> x220.kkaempf(29653) [zconfig] ZConfig.cc(_autodetectTextLocale):209 Default text locale is 'en_US'
      # 2017-11-08 18:57:23 <1> x220.kkaempf(29653) [zconfig] ZConfig.cc(Impl):341 libzypp: 16.17.3
      # 2017-11-08 18:57:23 <1> x220.kkaempf(29653) [zypp] IniParser.cc(parse):84 Start parsing /etc/zypp/zypp.conf[g___]
      # 2017-11-08 18:57:23 <1> x220.kkaempf(29653) [zypp] IniParser.cc(parse):138 Done parsing /etc/zypp/zypp.conf[_eF_]
      # 2017-11-08 18:57:23 <1> x220.kkaempf(29653) [Progress++] ProgressData.cc(report):88 {#1|/etc/zypp/zypp.conf}END
      patterns_dir => [ "." ]
      patterns_files_glob => "*.pattern"
      match => {
        "message" => "%{ZYPPER}"
      }
    }
    date {
      # http://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss" ]
      target => "@timestamp"
      locale => "en"
    }
  }
  else {
    grok {
      match => { "message" => ".*" }
    }
    mutate {
      add_tag => [ "_grokparsefailure" ]
    }
  }

  if ("elasticsupport" in [tags]) {
    mutate {
      # host and port are from the elasticsupport system and thus useless
      # timestamp was converted to @timestamp
      remove_field => ["host", "port", "timestamp"]
    }
  }

  if ("beats_input_codec_plain_applied" in [tags]) {
    mutate {
      remove_field => ["source", "beat"]
    }
  }

  # coming from error.log
  if ([traceback]) {
    mutate {
      add_tag => ["traceback"]
    }
  }
}
